/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.36
 * Generated at: 2025-03-12 15:45:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class MainRegister_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Register - SportFlow</title>\r\n");
      out.write("    <!-- Tailwind CSS CDN -->\r\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n");
      out.write("    <style>\r\n");
      out.write("        /* Custom animations */\r\n");
      out.write("        @keyframes slideIn {\r\n");
      out.write("            from { transform: translateY(20px); opacity: 0; }\r\n");
      out.write("            to { transform: translateY(0); opacity: 1; }\r\n");
      out.write("        }\r\n");
      out.write("        .animate-slide-in {\r\n");
      out.write("            animation: slideIn 0.5s ease-out forwards;\r\n");
      out.write("        }\r\n");
      out.write("        body {\r\n");
      out.write("            background: linear-gradient(135deg, #000000 0%, #1a1a1a 100%);\r\n");
      out.write("            min-height: 100vh;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("        }\r\n");
      out.write("        .form-container {\r\n");
      out.write("            background: #000000;\r\n");
      out.write("            border: 2px solid #FFD700;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            box-shadow: 0 0 20px rgba(255, 215, 0, 0.3);\r\n");
      out.write("        }\r\n");
      out.write("        input:focus, select:focus {\r\n");
      out.write("            outline: none;\r\n");
      out.write("            border-color: #FFD700;\r\n");
      out.write("            box-shadow: 0 0 5px #FFD700;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"form-container p-8 w-full max-w-md text-white\">\r\n");
      out.write("    <h2 class=\"text-3xl font-bold text-center text-[#FFD700] mb-6 animate-slide-in\">Join SportFlow</h2>\r\n");
      out.write("    <form id=\"registerForm\" action=\"Register\" method=\"post\" class=\"space-y-4\">\r\n");
      out.write("        <!-- Role Selection -->\r\n");
      out.write("        <div class=\"animate-slide-in\" style=\"animation-delay: 0.1s;\">\r\n");
      out.write("            <label for=\"role\" class=\"block text-[#FFD700] font-semibold\">I am a:</label>\r\n");
      out.write("            <select id=\"role\" name=\"role\" class=\"w-full p-2 bg-[#1a1a1a] text-white border border-[#FFD700] rounded focus:border-[#FFD700]\" required>\r\n");
      out.write("                <option value=\"\" disabled selected>Select your role</option>\r\n");
      out.write("                <option value=\"member\">Member</option>\r\n");
      out.write("                <option value=\"entraineur\">Entraineur</option>\r\n");
      out.write("            </select>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Common Fields -->\r\n");
      out.write("        <div id=\"commonFields\" class=\"space-y-4\">\r\n");
      out.write("            <div class=\"animate-slide-in\" style=\"animation-delay: 0.2s;\">\r\n");
      out.write("                <label for=\"username\" class=\"block text-[#FFD700] font-semibold\">Username</label>\r\n");
      out.write("                <input type=\"text\" id=\"username\" name=\"username\" class=\"w-full p-2 bg-[#1a1a1a] text-white border border-[#FFD700] rounded\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"animate-slide-in\" style=\"animation-delay: 0.3s;\">\r\n");
      out.write("                <label for=\"email\" class=\"block text-[#FFD700] font-semibold\">Email</label>\r\n");
      out.write("                <input type=\"email\" id=\"email\" name=\"email\" class=\"w-full p-2 bg-[#1a1a1a] text-white border border-[#FFD700] rounded\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"animate-slide-in\" style=\"animation-delay: 0.4s;\">\r\n");
      out.write("                <label for=\"password\" class=\"block text-[#FFD700] font-semibold\">Password</label>\r\n");
      out.write("                <input type=\"password\" id=\"password\" name=\"password\" class=\"w-full p-2 bg-[#1a1a1a] text-white border border-[#FFD700] rounded\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Member-specific Fields -->\r\n");
      out.write("        <div id=\"memberFields\" class=\"space-y-4 hidden\">\r\n");
      out.write("            <div class=\"animate-slide-in\" style=\"animation-delay: 0.5s;\">\r\n");
      out.write("                <label for=\"dateNaissance\" class=\"block text-[#FFD700] font-semibold\">Date of Birth</label>\r\n");
      out.write("                <input type=\"date\" id=\"dateNaissance\" name=\"dateNaissance\" class=\"w-full p-2 bg-[#1a1a1a] text-white border border-[#FFD700] rounded\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"animate-slide-in\" style=\"animation-delay: 0.6s;\">\r\n");
      out.write("                <label for=\"sport\" class=\"block text-[#FFD700] font-semibold\">Sport</label>\r\n");
      out.write("                <input type=\"text\" id=\"sport\" name=\"sport\" class=\"w-full p-2 bg-[#1a1a1a] text-white border border-[#FFD700] rounded\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Entraineur-specific Fields -->\r\n");
      out.write("        <div id=\"entraineurFields\" class=\"space-y-4 hidden\">\r\n");
      out.write("            <div class=\"animate-slide-in\" style=\"animation-delay: 0.5s;\">\r\n");
      out.write("                <label for=\"specialite\" class=\"block text-[#FFD700] font-semibold\">Specialty</label>\r\n");
      out.write("                <input type=\"text\" id=\"specialite\" name=\"specialite\" class=\"w-full p-2 bg-[#1a1a1a] text-white border border-[#FFD700] rounded\">\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Submit Button -->\r\n");
      out.write("        <div class=\"animate-slide-in\" style=\"animation-delay: 0.7s;\">\r\n");
      out.write("            <input type=\"submit\" value=\"Register\" class=\"w-full p-3 bg-[#FFD700] text-black font-bold rounded hover:bg-[#e6c200] transition duration-300 cursor-pointer\">\r\n");
      out.write("        </div>\r\n");
      out.write("    </form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- JavaScript for dynamic field switching -->\r\n");
      out.write("<script>\r\n");
      out.write("    const roleSelect = document.getElementById('role');\r\n");
      out.write("    const memberFields = document.getElementById('memberFields');\r\n");
      out.write("    const entraineurFields = document.getElementById('entraineurFields');\r\n");
      out.write("\r\n");
      out.write("    roleSelect.addEventListener('change', function() {\r\n");
      out.write("        if (this.value === 'member') {\r\n");
      out.write("            memberFields.classList.remove('hidden');\r\n");
      out.write("            entraineurFields.classList.add('hidden');\r\n");
      out.write("            // Make Member fields required\r\n");
      out.write("            document.getElementById('dateNaissance').required = true;\r\n");
      out.write("            document.getElementById('sport').required = true;\r\n");
      out.write("            document.getElementById('specialite').required = false;\r\n");
      out.write("        } else if (this.value === 'entraineur') {\r\n");
      out.write("            memberFields.classList.add('hidden');\r\n");
      out.write("            entraineurFields.classList.remove('hidden');\r\n");
      out.write("            // Make Entraineur fields required\r\n");
      out.write("            document.getElementById('dateNaissance').required = false;\r\n");
      out.write("            document.getElementById('sport').required = false;\r\n");
      out.write("            document.getElementById('specialite').required = true;\r\n");
      out.write("        } else {\r\n");
      out.write("            memberFields.classList.add('hidden');\r\n");
      out.write("            entraineurFields.classList.add('hidden');\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
