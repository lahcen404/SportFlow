/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.36
 * Generated at: 2025-03-14 10:41:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Login - SportFlow</title>\r\n");
      out.write("    <!-- Tailwind CSS CDN -->\r\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n");
      out.write("    <style>\r\n");
      out.write("        /* Custom Animations */\r\n");
      out.write("        @keyframes slideIn {\r\n");
      out.write("            from { transform: translateY(20px); opacity: 0; }\r\n");
      out.write("            to { transform: translateY(0); opacity: 1; }\r\n");
      out.write("        }\r\n");
      out.write("        @keyframes fadeIn {\r\n");
      out.write("            from { opacity: 0; }\r\n");
      out.write("            to { opacity: 1; }\r\n");
      out.write("        }\r\n");
      out.write("        .animate-slide-in { animation: slideIn 0.5s ease-out forwards; }\r\n");
      out.write("        .animate-fade-in { animation: fadeIn 0.8s ease-in forwards; }\r\n");
      out.write("        body {\r\n");
      out.write("            background: linear-gradient(135deg, #000000 0%, #1a1a1a 100%);\r\n");
      out.write("            min-height: 100vh;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("        }\r\n");
      out.write("        .login-container {\r\n");
      out.write("            background: #000000;\r\n");
      out.write("            border: 3px solid #FFD700;\r\n");
      out.write("            border-radius: 15px;\r\n");
      out.write("            box-shadow: 0 0 25px rgba(255, 215, 0, 0.4);\r\n");
      out.write("            display: flex;\r\n");
      out.write("            overflow: hidden;\r\n");
      out.write("            max-width: 900px;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("        }\r\n");
      out.write("        .form-section {\r\n");
      out.write("            padding: 2rem;\r\n");
      out.write("            width: 50%;\r\n");
      out.write("            color: #ffffff;\r\n");
      out.write("        }\r\n");
      out.write("        .image-section {\r\n");
      out.write("            width: 50%;\r\n");
      out.write("            background: #1a1a1a;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("        }\r\n");
      out.write("        .login-image {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            height: 100%;\r\n");
      out.write("            object-fit: cover;\r\n");
      out.write("        }\r\n");
      out.write("        input:focus {\r\n");
      out.write("            outline: none;\r\n");
      out.write("            border-color: #FFD700;\r\n");
      out.write("            box-shadow: 0 0 5px #FFD700;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-gold {\r\n");
      out.write("            background: #FFD700;\r\n");
      out.write("            color: #000000;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            transition: background 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-gold:hover {\r\n");
      out.write("            background: #e6c200;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-outline {\r\n");
      out.write("            border: 2px solid #FFD700;\r\n");
      out.write("            color: #FFD700;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-outline:hover {\r\n");
      out.write("            background: #FFD700;\r\n");
      out.write("            color: #000000;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"login-container\">\r\n");
      out.write("    <!-- Form Section -->\r\n");
      out.write("    <div class=\"form-section\">\r\n");
      out.write("        <h2 class=\"text-4xl font-bold text-center text-[#FFD700] mb-8 animate-slide-in\">Login to SportFlow</h2>\r\n");
      out.write("\r\n");
      out.write("        ");
 if (request.getAttribute("errorMessage") != null) { 
      out.write("\r\n");
      out.write("        <p class=\"text-red-500 text-center mb-4 animate-pulse\">");
      out.print( request.getAttribute("errorMessage") );
      out.write("</p>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <form action=\"Login\" method=\"post\" class=\"space-y-5\">\r\n");
      out.write("            <!-- Username -->\r\n");
      out.write("            <div class=\"animate-slide-in\" style=\"animation-delay: 0.1s;\">\r\n");
      out.write("                <label for=\"email\" class=\"block text-[#FFD700] font-semibold text-lg\">Email</label>\r\n");
      out.write("                <input type=\"text\" id=\"email\" name=\"email\" class=\"w-full p-3 bg-[#1a1a1a] text-white border border-[#FFD700] rounded-lg\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Password -->\r\n");
      out.write("            <div class=\"animate-slide-in\" style=\"animation-delay: 0.2s;\">\r\n");
      out.write("                <label for=\"password\" class=\"block text-[#FFD700] font-semibold text-lg\">Password</label>\r\n");
      out.write("                <input type=\"password\" id=\"password\" name=\"password\" class=\"w-full p-3 bg-[#1a1a1a] text-white border border-[#FFD700] rounded-lg\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <!-- Buttons -->\r\n");
      out.write("            <div class=\"space-y-4\">\r\n");
      out.write("                <div class=\"animate-slide-in\" style=\"animation-delay: 0.3s;\">\r\n");
      out.write("                    <input type=\"submit\" value=\"Login\" class=\"w-full p-3 btn-gold rounded-lg cursor-pointer\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"flex justify-between animate-slide-in\" style=\"animation-delay: 0.4s;\">\r\n");
      out.write("                    <a href=\"index.jsp\" class=\"w-1/2 mr-2 p-3 btn-outline text-center rounded-lg\">Back to Home</a>\r\n");
      out.write("                    <a href=\"MainRegister.jsp\" class=\"w-1/2 ml-2 p-3 btn-outline text-center rounded-lg\">Register</a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Image Section -->\r\n");
      out.write("    <div class=\"image-section\">\r\n");
      out.write("        <img src=\"https://i.pinimg.com/736x/45/18/8d/45188df79bc5081b47e9e97e009668c9.jpg\"\r\n");
      out.write("             alt=\"Sports Login\" class=\"login-image animate-fade-in\">\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
