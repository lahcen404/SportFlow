/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.36
 * Generated at: 2025-03-13 14:42:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import Member.Model.Member;

public final class memberDashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("Member.Model.Member");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Member Dashboard - SportFlow</title>\r\n");
      out.write("    <!-- Tailwind CSS CDN -->\r\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n");
      out.write("    <style>\r\n");
      out.write("        /* Custom Animations */\r\n");
      out.write("        @keyframes slideIn {\r\n");
      out.write("            from { transform: translateY(20px); opacity: 0; }\r\n");
      out.write("            to { transform: translateY(0); opacity: 1; }\r\n");
      out.write("        }\r\n");
      out.write("        @keyframes fadeIn {\r\n");
      out.write("            from { opacity: 0; }\r\n");
      out.write("            to { opacity: 1; }\r\n");
      out.write("        }\r\n");
      out.write("        .animate-slide-in { animation: slideIn 0.5s ease-out forwards; }\r\n");
      out.write("        .animate-fade-in { animation: fadeIn 0.8s ease-in forwards; }\r\n");
      out.write("        body {\r\n");
      out.write("            background: linear-gradient(135deg, #000000 0%, #1a1a1a 100%);\r\n");
      out.write("            min-height: 100vh;\r\n");
      out.write("            color: #ffffff;\r\n");
      out.write("            font-family: 'Arial', sans-serif;\r\n");
      out.write("        }\r\n");
      out.write("        .dashboard-container {\r\n");
      out.write("            max-width: 1200px;\r\n");
      out.write("            margin: 2rem auto;\r\n");
      out.write("            padding: 2rem;\r\n");
      out.write("            background: #000000;\r\n");
      out.write("            border: 3px solid #FFD700;\r\n");
      out.write("            border-radius: 15px;\r\n");
      out.write("            box-shadow: 0 0 25px rgba(255, 215, 0, 0.4);\r\n");
      out.write("        }\r\n");
      out.write("        .btn-gold {\r\n");
      out.write("            background: #FFD700;\r\n");
      out.write("            color: #000000;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            transition: background 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-gold:hover {\r\n");
      out.write("            background: #e6c200;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-outline {\r\n");
      out.write("            border: 2px solid #FFD700;\r\n");
      out.write("            color: #FFD700;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-outline:hover {\r\n");
      out.write("            background: #FFD700;\r\n");
      out.write("            color: #000000;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-danger {\r\n");
      out.write("            background: #ff4444;\r\n");
      out.write("            color: #ffffff;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            transition: background 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("        .btn-danger:hover {\r\n");
      out.write("            background: #cc0000;\r\n");
      out.write("        }\r\n");
      out.write("        input:focus, select:focus {\r\n");
      out.write("            outline: none;\r\n");
      out.write("            border-color: #FFD700;\r\n");
      out.write("            box-shadow: 0 0 5px #FFD700;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

    // Check if user is logged in and is a Member
    Member member = (Member) session.getAttribute("user");
    if (member == null) {
        response.sendRedirect("login.jsp");
        return;
    }

      out.write("\r\n");
      out.write("<div class=\"dashboard-container\">\r\n");
      out.write("    <!-- Header -->\r\n");
      out.write("    <h1 class=\"text-4xl font-bold text-center text-[#FFD700] mb-8 animate-slide-in\">Welcome, ");
      out.print( member.getUserame() );
      out.write("!</h1>\r\n");
      out.write("\r\n");
      out.write("    <!-- Navigation Tabs -->\r\n");
      out.write("    <div class=\"flex justify-center space-x-6 mb-10\">\r\n");
      out.write("        <button id=\"sessionsTab\" class=\"p-3 btn-gold rounded-lg\">View My Sessions</button>\r\n");
      out.write("        <button id=\"profileTab\" class=\"p-3 btn-outline rounded-lg\">Modify Profile</button>\r\n");
      out.write("        <button id=\"deleteTab\" class=\"p-3 btn-danger rounded-lg\">Delete Account</button>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Sessions Section -->\r\n");
      out.write("    <div id=\"sessionsSection\" class=\"space-y-6 animate-fade-in\">\r\n");
      out.write("        <h2 class=\"text-2xl font-semibold text-[#FFD700] mb-4\">My Training Sessions</h2>\r\n");
      out.write("        <p class=\"text-gray-300\">Here you can view your scheduled training sessions.</p>\r\n");
      out.write("        <!-- Placeholder for session list -->\r\n");
      out.write("        <div class=\"bg-[#1a1a1a] p-4 rounded-lg border border-[#FFD700]\">\r\n");
      out.write("            <p class=\"text-gray-400\">No sessions available yet. Check back later or contact your Entraineur!</p>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- Add real session data here via servlet or DAO -->\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Profile Modification Section -->\r\n");
      out.write("    <div id=\"profileSection\" class=\"space-y-6 hidden animate-fade-in\">\r\n");
      out.write("        <h2 class=\"text-2xl font-semibold text-[#FFD700] mb-4\">Modify Your Profile</h2>\r\n");
      out.write("        <form action=\"UpdateMember\" method=\"post\" class=\"space-y-5\">\r\n");
      out.write("            <div>\r\n");
      out.write("                <label for=\"username\" class=\"block text-[#FFD700] font-semibold\">Username</label>\r\n");
      out.write("                <input type=\"text\" id=\"username\" name=\"username\" value=\"");
      out.print( member.getUserame() );
      out.write("\"\r\n");
      out.write("                       class=\"w-full p-3 bg-[#1a1a1a] text-white border border-[#FFD700] rounded-lg\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div>\r\n");
      out.write("                <label for=\"email\" class=\"block text-[#FFD700] font-semibold\">Email</label>\r\n");
      out.write("                <input type=\"email\" id=\"email\" name=\"email\" value=\"");
      out.print( member.getEmail() );
      out.write("\"\r\n");
      out.write("                       class=\"w-full p-3 bg-[#1a1a1a] text-white border border-[#FFD700] rounded-lg\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div>\r\n");
      out.write("                <label for=\"password\" class=\"block text-[#FFD700] font-semibold\">Password</label>\r\n");
      out.write("                <input type=\"password\" id=\"password\" name=\"password\" value=\"");
      out.print( member.getPassword() );
      out.write("\"\r\n");
      out.write("                       class=\"w-full p-3 bg-[#1a1a1a] text-white border border-[#FFD700] rounded-lg\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div>\r\n");
      out.write("                <label for=\"dateNaissance\" class=\"block text-[#FFD700] font-semibold\">Date of Birth</label>\r\n");
      out.write("                <input type=\"date\" id=\"dateNaissance\" name=\"dateNaissance\" value=\"");
      out.print( member.getDateNaissance() );
      out.write("\"\r\n");
      out.write("                       class=\"w-full p-3 bg-[#1a1a1a] text-white border border-[#FFD700] rounded-lg\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div>\r\n");
      out.write("                <label for=\"sport\" class=\"block text-[#FFD700] font-semibold\">Sport</label>\r\n");
      out.write("                <input type=\"text\" id=\"sport\" name=\"sport\" value=\"");
      out.print( member.getSport() );
      out.write("\"\r\n");
      out.write("                       class=\"w-full p-3 bg-[#1a1a1a] text-white border border-[#FFD700] rounded-lg\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            <input type=\"hidden\" name=\"id\" value=\"");
      out.print( member.getId() );
      out.write("\">\r\n");
      out.write("            <input type=\"submit\" value=\"Update Profile\" class=\"w-full p-3 btn-gold rounded-lg cursor-pointer\">\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Delete Account Section -->\r\n");
      out.write("    <div id=\"deleteSection\" class=\"space-y-6 hidden animate-fade-in\">\r\n");
      out.write("        <h2 class=\"text-2xl font-semibold text-[#FFD700] mb-4\">Delete Your Account</h2>\r\n");
      out.write("        <p class=\"text-gray-300\">Are you sure you want to delete your account? This action cannot be undone.</p>\r\n");
      out.write("        <form action=\"DeleteMember\" method=\"post\" onsubmit=\"return confirm('Are you sure you want to delete your account?');\">\r\n");
      out.write("            <input type=\"hidden\" name=\"id\" value=\"");
      out.print( member.getId() );
      out.write("\">\r\n");
      out.write("            <input type=\"submit\" value=\"Delete Account\" class=\"w-full p-3 btn-danger rounded-lg cursor-pointer\">\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Logout Button -->\r\n");
      out.write("    <div class=\"text-center mt-10\">\r\n");
      out.write("        <a href=\"Logout\" class=\"p-3 btn-outline rounded-lg\">Logout</a>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- JavaScript for Tab Switching -->\r\n");
      out.write("<script>\r\n");
      out.write("    const sessionsTab = document.getElementById('sessionsTab');\r\n");
      out.write("    const profileTab = document.getElementById('profileTab');\r\n");
      out.write("    const deleteTab = document.getElementById('deleteTab');\r\n");
      out.write("    const sessionsSection = document.getElementById('sessionsSection');\r\n");
      out.write("    const profileSection = document.getElementById('profileSection');\r\n");
      out.write("    const deleteSection = document.getElementById('deleteSection');\r\n");
      out.write("\r\n");
      out.write("    function showSection(sectionToShow) {\r\n");
      out.write("        [sessionsSection, profileSection, deleteSection].forEach(section => {\r\n");
      out.write("            section.classList.add('hidden');\r\n");
      out.write("        });\r\n");
      out.write("        sectionToShow.classList.remove('hidden');\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    sessionsTab.addEventListener('click', () => showSection(sessionsSection));\r\n");
      out.write("    profileTab.addEventListener('click', () => showSection(profileSection));\r\n");
      out.write("    deleteTab.addEventListener('click', () => showSection(deleteSection));\r\n");
      out.write("\r\n");
      out.write("    // Show sessions by default\r\n");
      out.write("    showSection(sessionsSection);\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
